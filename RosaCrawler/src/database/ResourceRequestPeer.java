package database;

/**
 * Autogenerated by Lisptorq 0.1.4
 */
public class ResourceRequestPeer extends BaseResourceRequestPeer
{
    public static int TotalRequestNumber() throws Exception
    {
	Criteria c = new Criteria();
	Scroller<ResourceRequest> scr = ResourceRequestPeer.doSelect(c);
	return scr.size();
    }
    
    public static Scroller<ResourceRequest> listPagedResourceRequest(
	    String resoureName, int from, int num, String dateFrom,
	    String dateTo, String sort,short state)
    {
	try
	{
	    String sql = "select * from resourcerequest where disply=1 ";
	    String where = " ";
	    if (!(resoureName == null || resoureName.trim().equals("")))
	    {
		where += " and resourcename like '%" + resoureName.trim() + "%'";
	    }
	    if (!(dateFrom == null || dateFrom.trim().equals("")))
	    {
		where += " and time > " + dateFrom.trim();
	    }
	    if (!(dateTo == null || dateTo.trim().equals("")))
	    {
		where += " and time < " + dateTo.trim();
	    }
	    if (state !=-1)
	    {
		where += " and state = " + state;
	    }	
	    
	    if (!where.trim().equals(""))
		sql += where;

	    if (sort == null)
		sort = "time";
            sql += " order by " + sort + " DESC";
	    sql += " limit " + from + "," + num;
	    return ResourceRequestPeer.doSelect(sql);
	}
	catch (Exception e)
	{
	    e.printStackTrace();
	}
	return null;
    }
    
    public static Scroller<ResourceRequest> listPagedResourceRequest(
	    String resoureName,String dateFrom,
	    String dateTo, String sort,short state)
    {
	try
	{
	    String sql = "select * from resourcerequest where disply=1 ";
	    String where = " ";
	    if (!(resoureName == null || resoureName.trim().equals("")))
	    {
		where += " and resourcename like '%" + resoureName.trim() + "%'";

	    }
	    if (!(dateFrom == null || dateFrom.trim().equals("")))
	    {
		where += " and time > " + dateFrom.trim();
	    }
	    if (!(dateTo == null || dateTo.trim().equals("")))
	    {
		where += " and time < " + dateTo.trim();
	    }
	    if (state !=-1)
	    {
		where += " and state = " + state;
	    }	    
	    if (!where.trim().equals(""))
		sql += where;

	    if (sort == null)
		sort = "time";
            sql += " order by " + sort + " DESC";
	    return ResourceRequestPeer.doSelect(sql);
	}
	catch (Exception e)
	{
	    e.printStackTrace();
	}
	return null;
    }    
}